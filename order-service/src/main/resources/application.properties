

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://postgres:5432/order-service
spring.datasource.username=root
spring.datasource.password=posql


#Hibernate properties
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.storage.engine=innodb

server.port=0
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8762/eureka
spring.application.name=order-service


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include[0]=*
management.endpoint.health.show-details=always

#Resilience4j properties
#to be able to see the different states
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
#buffer size for events
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#this ensures the circuit breaker isn't set as open right away
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=count_based
# this ensures 5 back to back requests are failed before the circuit breaker would be open
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
# when 50% of the calls are failed, then it is considered as failed
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
# time to wait in the open state before going to the half-open state so all calls don't use the fallback logic
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
#how many calls are allowed to happen before resilience4j would check of communication between services are working
# as expected
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
# enabling transition between open state and half open
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true


#Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0


#kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.starq.orderservice.event.OrderPlacedEvent




